<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
  <head>
    <title>Web Access</title>
  </head>

  <body bgcolor="#f0f0f0">
    <a name="WebAccess"></a>
    <center><h1>Web Access</h1></center>

    The CS 240 Utilities include several classes that can be used to download web documents.
    <p>
    The URLConnection class is the main interface for accessing web documents.
    It has one static method named Open that takes the URL of the document to be acccessed, 
    and returns an InputStream object that can be used to read the contents of the document.
    The URL can be either an HTTP URL or a file URL.
    Examples are "http://www.cnn.com/index.html" and "file:/public_html/index.html".
    <p>
    The InputStream object returned by URLConnection::Open provides methods for reading the data
    stored in the web document, and to close the stream when the program has finished reading 
    the document's data.
    The following code fragment shows how to read a web document and print its contents to standard output.
    <pre>
    #include "URLConnection.h"
    
    InputStream * doc = URLConnection::Open("http://www.cnn.com/index.html");

    while (!doc->IsDone()) {
       char c = doc->Read();
       cout << c;
    }

    doc->Close();
    delete doc;</pre>
    InputStream is an abstract interface for reading data from a stream.
    There are two classes that implement the InputStream interface, FileInputStream and HTTPInputStream.
    If the URL passed to URLConnection::Open is a file URL, the InputStream object returned
    is a FileInputStream object.
    If the URL is an HTTP URL, the InputStream object returned is an HTTPInputStream object.
    You need not be concerned directly with the FileInputStream and HTTPInputStream classes.
    URLConnection::Open takes care of deciding which kind of object to create.
    Your code need not even know what kind of URL is being processed, file or HTTP.
    It just needs to make sure that the InputStream returned by URLConnection::Open is eventually
    closed and deleted.
    <p>
    There are many kinds of error conditions that can occur when a program accesses documents on the web.
    The methods on the web access classes throw exceptions when errors occur.
    Examples of exceptions that might be thrown are: InvalidURLException, FileException, NetworkException,
    and IllegalStateException.
    Your code must be prepared to handle these exceptions when they occur, or your program will
    terminate abnormally.
    <p>
    The classes that provide the web access functions are described below.

    <p>

    <hr>
    <a name="InputStream"></a>
    <h2>class InputStream</h2>

    <h3>#include "InputStream.h"</h3>

    InputStream is an abstract interface for reading the stream of bytes that are stored in the
    document being accessed.
    This abstract interface is implemented by the FileInputStream and HTTPInputStream classes.

    <h3>Methods</h3>

    <h3>virtual bool IsOpen()</h3>

    This method returns true if the stream is open, and false if it is closed.

    <h3>virtual bool IsDone()</h3>

	This method returns true if the end of the stream has been reached, and false if 
	there are still more bytes to be read.

	<h3>virtual char Read()</h3>

	This method returns the next byte of data from the document.
	<p>
	If the stream is closed, an IllegalStateException is thrown.
	<p>
	If the last byte has already been read from the stream, an IllegalStateException is thrown.
	<p>
    Depending on the type of the InputStream, this method could throw any of the following exceptions:
    FileException, NetworkException, IllegalStateException.

    <h3>virtual void Close()</h3>

    This method closes the stream if it is not already closed.
    All system resources used by the stream are released.

    <p>

    <hr>
    <a name="URLConnection"></a>
    <h2>class URLConnection</h2>

    <h3>#include "URLConnection.h"</h3>

    The URLConnection class is used to open an InputStream that can be used to read the contents of
    a web document.

    <h3>Methods</h3>
    
    <h3>static InputStream * Open(const string & url)</h3>

    This method takes the URL of the document to be downloaded as its only parameter, and returns
    an open InputStream object that can be used to read the contents of the document.
    The file must be either a file URL or an HTTP URL.
    The caller must call the Close method on the returned InputStream when they are finished reading
    data from the document, and then delete the object.
    <p>
    Any of the following exceptions may be thrown by this method: InvalidURLException, FileException, 
    NetworkException, IllegalStateException.

    <p>

    <hr>
    <address><a href="mailto:correc@ti.con">Ken Rodham</a></address>
  </body>
</html>
